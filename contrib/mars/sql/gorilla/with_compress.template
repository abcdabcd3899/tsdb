
CREATE TABLE :tname
(batch int,
 ts timestamp,
 f4 float4 ENCODING (compresstype=:compress),
 f8 float  ENCODING (compresstype=:compress) )
USING mars
WITH (group_col_ = "{batch}", group_param_col_ = "{ts in 1 day}")
DISTRIBUTED by (batch);

CREATE TABLE heap_:tname
(batch int,
 ts timestamp,
 f4 float4,
 f8 float8)
DISTRIBUTED by (batch);

INSERT INTO heap_:tname VALUES
  (0, '2020-10-10 09:01:02'::timestamp, null, null),
  (0, '2020-10-10 09:01:03'::timestamp, null, null),
  (0, '2020-10-10 09:01:04'::timestamp, null, null),
  (0, '2020-10-10 09:01:05'::timestamp, null, null)
;

INSERT INTO :tname SELECT * FROM heap_:tname ORDER BY batch, ts;

SELECT batch, f4, f8 FROM :tname;

SELECT
 batch, :f4_agg_funcs, :f8_agg_funcs
FROM :tname
GROUP BY batch;

TRUNCATE :tname;
TRUNCATE heap_:tname;

INSERT INTO heap_:tname
    SELECT
        i/1025, '2020-10-10 09:01:02'::timestamp + i * interval '1 second', null, null
    FROM
    generate_series(1, 10251)i
;
INSERT INTO :tname SELECT * FROM heap_:tname ORDER BY batch, ts;

SELECT COUNT(*) FROM
(
	SELECT * FROM :tname
	INTERSECT ALL
	SELECT * FROM heap_:tname
) as t
;

TRUNCATE :tname;
TRUNCATE heap_:tname;

INSERT INTO heap_:tname
    SELECT
        i%2, '2020-10-10 09:01:02'::timestamp + i * interval '1 second', null, null
    FROM
    generate_series(1, 10251)i
;
INSERT INTO :tname SELECT * FROM heap_:tname ORDER BY batch, ts;

SELECT COUNT(*) FROM
(
	SELECT * FROM :tname
	INTERSECT ALL
	SELECT * FROM heap_:tname
) as t
;

TRUNCATE :tname;
TRUNCATE heap_:tname;

INSERT INTO heap_:tname
    SELECT
        1, '2020-10-10 09:01:02'::timestamp + i * interval '1 second', i / 103::float4, i / 101::float8
    FROM
        generate_series(1, 10251)i
;
INSERT INTO :tname SELECT * FROM heap_:tname ORDER BY batch, ts;

SELECT COUNT(*) FROM
(
	SELECT * FROM :tname
	INTERSECT ALL
	SELECT * FROM heap_:tname
) as t
;

TRUNCATE :tname;
TRUNCATE heap_:tname;

INSERT INTO heap_:tname
    SELECT
        1 ,
        '2020-10-10 09:01:02'::timestamp + i * interval '1 second',
        CASE
            WHEN i%2=1 THEN null
            ELSE i/103::float4
        END,
        CASE
            WHEN i%3=1 THEN null
        ELSE i/101::float8
        END
    FROM
        generate_series(1, 10251)i
;
INSERT INTO :tname SELECT * FROM heap_:tname ORDER BY batch, ts;

SELECT batch, f4, f8 FROM :tname LIMIT 11;

SELECT COUNT(*) FROM
(
	SELECT * FROM :tname
	INTERSECT ALL
	SELECT * FROM heap_:tname
) as t
;
