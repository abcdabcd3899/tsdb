\set explain 'explain (costs off)'
\set tname test_mars_multi_orderkeys
\set global_order_cols '"{c1, c2, c3, c4}"'
\set local_order_cols  '"{c1, c2, c3, c4}"'
\set group_cols        '"{}"'
\set group_param_cols  '"{}"'
\i sql/multikeys.template
create table :tname
     ( batch int default 0
     , c1 float4
     , c2 float8
     , c3 int4
     , c4 int8
     )
 using mars
  with ( global_order_col_ = :global_order_cols
       , local_order_col_  = :local_order_cols
       , group_col_        = :group_cols
       , group_param_col_  = :group_param_cols
       )
 distributed by (batch)
;
--
-- verify the aux relation and aux indexes
--
\set tnamestr '''' :tname ''''
-- get the aux relname
\out /dev/null
select segrelid as auxrelid
  from mx_mars
 where relid = :tnamestr::regclass;
\out
\gset
-- list the aux columns for indexes
select attname
     , atttypid::regtype
  from pg_attribute
 where attrelid = :auxrelid
   and attname like 'attr%'
 order by attnum;
    attname     |     atttypid     
----------------+------------------
 attr2__min__c1 | real
 attr2__max__c1 | real
 attr3__min__c2 | double precision
 attr3__max__c2 | double precision
 attr4__min__c3 | integer
 attr4__max__c3 | integer
 attr5__min__c4 | bigint
 attr5__max__c4 | bigint
(8 rows)

-- list aux indexes, the names differ every run, so only show the count
select count(indexrelid)
  from pg_index
 where indrelid = :auxrelid;
 count 
-------
     3
(1 row)

-- list the aux index columns
select a.attname
     , a.atttypid::regtype
  from pg_index as i
  join pg_attribute as a
    on i.indexrelid = a.attrelid
 where indrelid = :auxrelid;
    attname     |     atttypid     
----------------+------------------
 batch          | bigint
 attr2__min__c1 | real
 attr2__max__c1 | real
 attr3__min__c2 | double precision
 attr3__max__c2 | double precision
 attr4__min__c3 | integer
 attr4__max__c3 | integer
 attr5__min__c4 | bigint
 attr5__max__c4 | bigint
 attr2__max__c1 | real
 attr2__min__c1 | real
 attr3__max__c2 | double precision
 attr3__min__c2 | double precision
 attr4__max__c3 | integer
 attr4__min__c3 | integer
 attr5__max__c4 | bigint
 attr5__min__c4 | bigint
(17 rows)

-- insert data
insert into :tname
select 0 as batch
     , i / 8 % 2
     , i / 4 % 2
     , i / 2 % 2
     , i / 1 % 2
  from generate_series(0, 15) i
;
-- verify the grouping
select ctid, c1, c2, c3, c4 from :tname;
  ctid  | c1 | c2 | c3 | c4 
--------+----+----+----+----
 (1,1)  |  0 |  0 |  0 |  0
 (1,2)  |  0 |  0 |  0 |  1
 (1,3)  |  0 |  0 |  1 |  0
 (1,4)  |  0 |  0 |  1 |  1
 (1,5)  |  0 |  1 |  0 |  0
 (1,6)  |  0 |  1 |  0 |  1
 (1,7)  |  0 |  1 |  1 |  0
 (1,8)  |  0 |  1 |  1 |  1
 (1,9)  |  1 |  0 |  0 |  0
 (1,10) |  1 |  0 |  0 |  1
 (1,11) |  1 |  0 |  1 |  0
 (1,12) |  1 |  0 |  1 |  1
 (1,13) |  1 |  1 |  0 |  0
 (1,14) |  1 |  1 |  0 |  1
 (1,15) |  1 |  1 |  1 |  0
 (1,16) |  1 |  1 |  1 |  1
(16 rows)

-- use all the quals as scankeys
select c1, c2, c3, c4 from :tname where c1 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
  1 |  1 |  0 |  0
  1 |  1 |  0 |  1
  1 |  1 |  1 |  0
  1 |  1 |  1 |  1
(8 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(4 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
(1 row)

-- use some of the quals as filters
select c1, c2, c3, c4 from :tname where c1 > 0 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  1 |  1 |  0
(2 rows)

select c1, c2, c3, c4 from :tname where c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  0 |  0 |  1 |  0
  1 |  0 |  1 |  0
(2 rows)

-- array keys and array filters
select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
  1 |  1 |  0 |  0
  1 |  1 |  0 |  1
  1 |  1 |  1 |  0
  1 |  1 |  1 |  1
(8 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(4 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 ) and c4 in ( 4, 0 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
(1 row)

-- vi: syntax=sql et :
\set tname test_mars_multi_orderkeys_groupkeys
\set global_order_cols '"{c1, c2, c3, c4}"'
\set local_order_cols  '"{c1, c2, c3, c4}"'
\set group_cols        '"{c1, c2}"'
\set group_param_cols  '"{}"'
\i sql/multikeys.template
create table :tname
     ( batch int default 0
     , c1 float4
     , c2 float8
     , c3 int4
     , c4 int8
     )
 using mars
  with ( global_order_col_ = :global_order_cols
       , local_order_col_  = :local_order_cols
       , group_col_        = :group_cols
       , group_param_col_  = :group_param_cols
       )
 distributed by (batch)
;
--
-- verify the aux relation and aux indexes
--
\set tnamestr '''' :tname ''''
-- get the aux relname
\out /dev/null
select segrelid as auxrelid
  from mx_mars
 where relid = :tnamestr::regclass;
\out
\gset
-- list the aux columns for indexes
select attname
     , atttypid::regtype
  from pg_attribute
 where attrelid = :auxrelid
   and attname like 'attr%'
 order by attnum;
       attname        |     atttypid     
----------------------+------------------
 attr2__min__c1       | real
 attr2__max__c1       | real
 attr3__min__c2       | double precision
 attr3__max__c2       | double precision
 attr4__min__c3       | integer
 attr4__max__c3       | integer
 attr5__min__c4       | bigint
 attr5__max__c4       | bigint
 attr2__group_key__c1 | real
 attr3__group_key__c2 | double precision
(10 rows)

-- list aux indexes, the names differ every run, so only show the count
select count(indexrelid)
  from pg_index
 where indrelid = :auxrelid;
 count 
-------
     4
(1 row)

-- list the aux index columns
select a.attname
     , a.atttypid::regtype
  from pg_index as i
  join pg_attribute as a
    on i.indexrelid = a.attrelid
 where indrelid = :auxrelid;
       attname        |     atttypid     
----------------------+------------------
 batch                | bigint
 attr2__min__c1       | real
 attr2__max__c1       | real
 attr3__min__c2       | double precision
 attr3__max__c2       | double precision
 attr4__min__c3       | integer
 attr4__max__c3       | integer
 attr5__min__c4       | bigint
 attr5__max__c4       | bigint
 attr2__max__c1       | real
 attr2__min__c1       | real
 attr3__max__c2       | double precision
 attr3__min__c2       | double precision
 attr4__max__c3       | integer
 attr4__min__c3       | integer
 attr5__max__c4       | bigint
 attr5__min__c4       | bigint
 attr2__group_key__c1 | real
 attr3__group_key__c2 | double precision
(19 rows)

-- insert data
insert into :tname
select 0 as batch
     , i / 8 % 2
     , i / 4 % 2
     , i / 2 % 2
     , i / 1 % 2
  from generate_series(0, 15) i
;
-- verify the grouping
select ctid, c1, c2, c3, c4 from :tname;
 ctid  | c1 | c2 | c3 | c4 
-------+----+----+----+----
 (1,1) |  0 |  0 |  1 |  1
 (2,1) |  0 |  1 |  1 |  1
 (3,1) |  1 |  0 |  1 |  1
 (4,1) |  1 |  1 |  1 |  1
(4 rows)

-- use all the quals as scankeys
select c1, c2, c3, c4 from :tname where c1 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
  1 |  1 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

-- use some of the quals as filters
select c1, c2, c3, c4 from :tname where c1 > 0 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

select c1, c2, c3, c4 from :tname where c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

-- array keys and array filters
select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
  1 |  1 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 ) and c4 in ( 4, 0 );
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

-- vi: syntax=sql et :
\set tname test_mars_multi_orderkeys_param_groupkeys
\set global_order_cols '"{c1, c2, c3, c4}"'
\set local_order_cols  '"{c1, c2, c3, c4}"'
\set group_cols        '"{c1, c2}"'
\set group_param_cols  '"{c3 in 1, c4 in 1}"'
\i sql/multikeys.template
create table :tname
     ( batch int default 0
     , c1 float4
     , c2 float8
     , c3 int4
     , c4 int8
     )
 using mars
  with ( global_order_col_ = :global_order_cols
       , local_order_col_  = :local_order_cols
       , group_col_        = :group_cols
       , group_param_col_  = :group_param_cols
       )
 distributed by (batch)
;
--
-- verify the aux relation and aux indexes
--
\set tnamestr '''' :tname ''''
-- get the aux relname
\out /dev/null
select segrelid as auxrelid
  from mx_mars
 where relid = :tnamestr::regclass;
\out
\gset
-- list the aux columns for indexes
select attname
     , atttypid::regtype
  from pg_attribute
 where attrelid = :auxrelid
   and attname like 'attr%'
 order by attnum;
          attname           |     atttypid     
----------------------------+------------------
 attr2__min__c1             | real
 attr2__max__c1             | real
 attr3__min__c2             | double precision
 attr3__max__c2             | double precision
 attr4__min__c3             | integer
 attr4__max__c3             | integer
 attr5__min__c4             | bigint
 attr5__max__c4             | bigint
 attr2__group_key__c1       | real
 attr3__group_key__c2       | double precision
 attr4__group_param_key__c3 | integer
 attr5__group_param_key__c4 | bigint
(12 rows)

-- list aux indexes, the names differ every run, so only show the count
select count(indexrelid)
  from pg_index
 where indrelid = :auxrelid;
 count 
-------
     5
(1 row)

-- list the aux index columns
select a.attname
     , a.atttypid::regtype
  from pg_index as i
  join pg_attribute as a
    on i.indexrelid = a.attrelid
 where indrelid = :auxrelid;
          attname           |     atttypid     
----------------------------+------------------
 batch                      | bigint
 attr2__min__c1             | real
 attr2__max__c1             | real
 attr3__min__c2             | double precision
 attr3__max__c2             | double precision
 attr4__min__c3             | integer
 attr4__max__c3             | integer
 attr5__min__c4             | bigint
 attr5__max__c4             | bigint
 attr2__max__c1             | real
 attr2__min__c1             | real
 attr3__max__c2             | double precision
 attr3__min__c2             | double precision
 attr4__max__c3             | integer
 attr4__min__c3             | integer
 attr5__max__c4             | bigint
 attr5__min__c4             | bigint
 attr2__group_key__c1       | real
 attr3__group_key__c2       | double precision
 attr4__group_param_key__c3 | integer
 attr5__group_param_key__c4 | bigint
 attr4__group_param_key__c3 | integer
 attr5__group_param_key__c4 | bigint
 attr2__group_key__c1       | real
 attr3__group_key__c2       | double precision
(25 rows)

-- insert data
insert into :tname
select 0 as batch
     , i / 8 % 2
     , i / 4 % 2
     , i / 2 % 2
     , i / 1 % 2
  from generate_series(0, 15) i
;
-- verify the grouping
select ctid, c1, c2, c3, c4 from :tname;
  ctid  | c1 | c2 | c3 | c4 
--------+----+----+----+----
 (1,1)  |  0 |  0 |  0 |  0
 (2,1)  |  0 |  0 |  0 |  1
 (3,1)  |  0 |  0 |  1 |  0
 (4,1)  |  0 |  0 |  1 |  1
 (5,1)  |  0 |  1 |  0 |  0
 (6,1)  |  0 |  1 |  0 |  1
 (7,1)  |  0 |  1 |  1 |  0
 (8,1)  |  0 |  1 |  1 |  1
 (9,1)  |  1 |  0 |  0 |  0
 (10,1) |  1 |  0 |  0 |  1
 (11,1) |  1 |  0 |  1 |  0
 (12,1) |  1 |  0 |  1 |  1
 (13,1) |  1 |  1 |  0 |  0
 (14,1) |  1 |  1 |  0 |  1
 (15,1) |  1 |  1 |  1 |  0
 (16,1) |  1 |  1 |  1 |  1
(16 rows)

-- use all the quals as scankeys
select c1, c2, c3, c4 from :tname where c1 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
  1 |  1 |  0 |  0
  1 |  1 |  0 |  1
  1 |  1 |  1 |  0
  1 |  1 |  1 |  1
(8 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(4 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
(1 row)

-- use some of the quals as filters
select c1, c2, c3, c4 from :tname where c1 > 0 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  1 |  1 |  0
(2 rows)

select c1, c2, c3, c4 from :tname where c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  0 |  0 |  1 |  0
  1 |  0 |  1 |  0
(2 rows)

-- array keys and array filters
select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
  1 |  1 |  0 |  0
  1 |  1 |  0 |  1
  1 |  1 |  1 |  0
  1 |  1 |  1 |  1
(8 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(4 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 ) and c4 in ( 4, 0 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
(1 row)

-- vi: syntax=sql et :
\set tname test_mars_multi_groupkeys
\set global_order_cols '"{}"'
\set local_order_cols  '"{c1, c2, c3, c4}"'
\set group_cols        '"{c1, c2}"'
\set group_param_cols  '"{}"'
\i sql/multikeys.template
create table :tname
     ( batch int default 0
     , c1 float4
     , c2 float8
     , c3 int4
     , c4 int8
     )
 using mars
  with ( global_order_col_ = :global_order_cols
       , local_order_col_  = :local_order_cols
       , group_col_        = :group_cols
       , group_param_col_  = :group_param_cols
       )
 distributed by (batch)
;
--
-- verify the aux relation and aux indexes
--
\set tnamestr '''' :tname ''''
-- get the aux relname
\out /dev/null
select segrelid as auxrelid
  from mx_mars
 where relid = :tnamestr::regclass;
\out
\gset
-- list the aux columns for indexes
select attname
     , atttypid::regtype
  from pg_attribute
 where attrelid = :auxrelid
   and attname like 'attr%'
 order by attnum;
       attname        |     atttypid     
----------------------+------------------
 attr2__group_key__c1 | real
 attr3__group_key__c2 | double precision
(2 rows)

-- list aux indexes, the names differ every run, so only show the count
select count(indexrelid)
  from pg_index
 where indrelid = :auxrelid;
 count 
-------
     2
(1 row)

-- list the aux index columns
select a.attname
     , a.atttypid::regtype
  from pg_index as i
  join pg_attribute as a
    on i.indexrelid = a.attrelid
 where indrelid = :auxrelid;
       attname        |     atttypid     
----------------------+------------------
 batch                | bigint
 attr2__group_key__c1 | real
 attr3__group_key__c2 | double precision
(3 rows)

-- insert data
insert into :tname
select 0 as batch
     , i / 8 % 2
     , i / 4 % 2
     , i / 2 % 2
     , i / 1 % 2
  from generate_series(0, 15) i
;
-- verify the grouping
select ctid, c1, c2, c3, c4 from :tname;
 ctid  | c1 | c2 | c3 | c4 
-------+----+----+----+----
 (1,1) |  0 |  0 |  1 |  1
 (2,1) |  0 |  1 |  1 |  1
 (3,1) |  1 |  0 |  1 |  1
 (4,1) |  1 |  1 |  1 |  1
(4 rows)

-- use all the quals as scankeys
select c1, c2, c3, c4 from :tname where c1 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
  1 |  1 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

-- use some of the quals as filters
select c1, c2, c3, c4 from :tname where c1 > 0 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

select c1, c2, c3, c4 from :tname where c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

-- array keys and array filters
select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
  1 |  1 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  1
(1 row)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 ) and c4 in ( 4, 0 );
 c1 | c2 | c3 | c4 
----+----+----+----
(0 rows)

-- vi: syntax=sql et :
\set tname test_mars_multi_param_groupkeys
\set global_order_cols '"{}"'
\set local_order_cols  '"{c1, c2, c3, c4}"'
\set group_cols        '"{c1, c2}"'
\set group_param_cols  '"{c3 in 1, c4 in 1}"'
\i sql/multikeys.template
create table :tname
     ( batch int default 0
     , c1 float4
     , c2 float8
     , c3 int4
     , c4 int8
     )
 using mars
  with ( global_order_col_ = :global_order_cols
       , local_order_col_  = :local_order_cols
       , group_col_        = :group_cols
       , group_param_col_  = :group_param_cols
       )
 distributed by (batch)
;
--
-- verify the aux relation and aux indexes
--
\set tnamestr '''' :tname ''''
-- get the aux relname
\out /dev/null
select segrelid as auxrelid
  from mx_mars
 where relid = :tnamestr::regclass;
\out
\gset
-- list the aux columns for indexes
select attname
     , atttypid::regtype
  from pg_attribute
 where attrelid = :auxrelid
   and attname like 'attr%'
 order by attnum;
          attname           |     atttypid     
----------------------------+------------------
 attr2__group_key__c1       | real
 attr3__group_key__c2       | double precision
 attr4__group_param_key__c3 | integer
 attr5__group_param_key__c4 | bigint
(4 rows)

-- list aux indexes, the names differ every run, so only show the count
select count(indexrelid)
  from pg_index
 where indrelid = :auxrelid;
 count 
-------
     3
(1 row)

-- list the aux index columns
select a.attname
     , a.atttypid::regtype
  from pg_index as i
  join pg_attribute as a
    on i.indexrelid = a.attrelid
 where indrelid = :auxrelid;
          attname           |     atttypid     
----------------------------+------------------
 batch                      | bigint
 attr2__group_key__c1       | real
 attr3__group_key__c2       | double precision
 attr4__group_param_key__c3 | integer
 attr5__group_param_key__c4 | bigint
 attr4__group_param_key__c3 | integer
 attr5__group_param_key__c4 | bigint
 attr2__group_key__c1       | real
 attr3__group_key__c2       | double precision
(9 rows)

-- insert data
insert into :tname
select 0 as batch
     , i / 8 % 2
     , i / 4 % 2
     , i / 2 % 2
     , i / 1 % 2
  from generate_series(0, 15) i
;
-- verify the grouping
select ctid, c1, c2, c3, c4 from :tname;
  ctid  | c1 | c2 | c3 | c4 
--------+----+----+----+----
 (1,1)  |  0 |  0 |  0 |  0
 (2,1)  |  0 |  0 |  0 |  1
 (3,1)  |  0 |  0 |  1 |  0
 (4,1)  |  0 |  0 |  1 |  1
 (5,1)  |  0 |  1 |  0 |  0
 (6,1)  |  0 |  1 |  0 |  1
 (7,1)  |  0 |  1 |  1 |  0
 (8,1)  |  0 |  1 |  1 |  1
 (9,1)  |  1 |  0 |  0 |  0
 (10,1) |  1 |  0 |  0 |  1
 (11,1) |  1 |  0 |  1 |  0
 (12,1) |  1 |  0 |  1 |  1
 (13,1) |  1 |  1 |  0 |  0
 (14,1) |  1 |  1 |  0 |  1
 (15,1) |  1 |  1 |  1 |  0
 (16,1) |  1 |  1 |  1 |  1
(16 rows)

-- use all the quals as scankeys
select c1, c2, c3, c4 from :tname where c1 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
  1 |  1 |  0 |  0
  1 |  1 |  0 |  1
  1 |  1 |  1 |  0
  1 |  1 |  1 |  1
(8 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(4 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 > 0 and c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
(1 row)

-- use some of the quals as filters
select c1, c2, c3, c4 from :tname where c1 > 0 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  1 |  1 |  0
(2 rows)

select c1, c2, c3, c4 from :tname where c2 < 1 and c3 > 0 and c4 < 1;
 c1 | c2 | c3 | c4 
----+----+----+----
  0 |  0 |  1 |  0
  1 |  0 |  1 |  0
(2 rows)

-- array keys and array filters
select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
  1 |  1 |  0 |  0
  1 |  1 |  0 |  1
  1 |  1 |  1 |  0
  1 |  1 |  1 |  1
(8 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  0 |  0
  1 |  0 |  0 |  1
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(4 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
  1 |  0 |  1 |  1
(2 rows)

select c1, c2, c3, c4 from :tname where c1 in ( 1, 2 ) and c2 in ( 0, 3 ) and c3 in ( 1, 1 ) and c4 in ( 4, 0 );
 c1 | c2 | c3 | c4 
----+----+----+----
  1 |  0 |  1 |  0
(1 row)

-- vi: syntax=sql et :
-- vi: et :
