\set tname test_mars_varlen_type_as_tag
\set tnamestr '''' :tname ''''
select gp_debug_set_create_table_default_numsegments(1);
 gp_debug_set_create_table_default_numsegments 
-----------------------------------------------
 1
(1 row)

--start_ignore
drop table if exists :tname;

create table :tname(c0 text, c1 int) using mars
 with(group_col_="{c0}") distributed by(c1);
--end_ignore
insert into :tname select i/3, i from generate_series(0, 12) i;
select ctid, * from :tname;
 ctid  | c0 | c1 
-------+----+----
 (1,1) | 0  |  2
 (2,1) | 1  |  5
 (3,1) | 2  |  8
 (4,1) | 3  | 11
 (5,1) | 4  | 12
(5 rows)

explain (costs off) select * from :tname where c0 > '2';
                            QUERY PLAN                            
------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: (c0 > '2'::text)
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c0 > '2';
 c0 | c1 
----+----
 3  | 11
 4  | 12
(2 rows)

select * from :tname where c0 > '2'::varchar;
 c0 | c1 
----+----
 3  | 11
 4  | 12
(2 rows)

select * from :tname where c0 > '2'::text;
 c0 | c1 
----+----
 3  | 11
 4  | 12
(2 rows)

--start_ignore
drop table if exists :tname;
create table :tname(c0 interval, c1 numeric) using mars
 with(group_col_="{c0, c1}") distributed by(c0);
--end_ignore
insert into :tname select i/5 * '1 hour'::interval, i/3 from generate_series(0, 12) i;
select ctid, * from :tname;
 ctid  |    c0     | c1 
-------+-----------+----
 (1,1) | @ 0       |  0
 (2,1) | @ 0       |  1
 (3,1) | @ 1 hour  |  1
 (4,1) | @ 1 hour  |  2
 (5,1) | @ 1 hour  |  3
 (6,1) | @ 2 hours |  3
 (7,1) | @ 2 hours |  4
(7 rows)

explain (costs off) select * from :tname where c0 >= make_interval(hours => 2);
                            QUERY PLAN                            
------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: (c0 >= '@ 2 hours'::interval)
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c0 >= make_interval(hours => 2);
    c0     | c1 
-----------+----
 @ 2 hours |  3
 @ 2 hours |  4
(2 rows)

explain (costs off) select * from :tname where c1 >= 3::int8;
                            QUERY PLAN                            
------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: (c1 >= '3'::numeric)
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c1 >= 3::int8;
    c0     | c1 
-----------+----
 @ 1 hour  |  3
 @ 2 hours |  3
 @ 2 hours |  4
(3 rows)

explain (costs off) select * from :tname where c0 >= make_interval(hours => 2) and c1 >= 3;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: ((c0 >= '@ 2 hours'::interval) AND (c1 >= '3'::numeric))
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c0 >= make_interval(hours => 2) and c1 >= 3;
    c0     | c1 
-----------+----
 @ 2 hours |  3
 @ 2 hours |  4
(2 rows)

--start_ignore
drop table if exists :tname;
create table :tname(c0 varchar, c1 name) using mars
 with(group_col_="{c0, c1}") distributed by(c0);
--end_ignore
insert into :tname select (i/5)::varchar, (i/3)::name from generate_series(0, 12) i;
select ctid, * from :tname;
 ctid  | c0 | c1 
-------+----+----
 (1,1) | 0  | 0
 (2,1) | 0  | 1
 (3,1) | 1  | 1
 (4,1) | 1  | 2
 (5,1) | 1  | 3
 (6,1) | 2  | 3
 (7,1) | 2  | 4
(7 rows)

explain (costs off) select * from :tname where c0 >= '2';
                            QUERY PLAN                            
------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: ((c0)::text >= '2'::text)
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c0 >= '2';
 c0 | c1 
----+----
 2  | 3
 2  | 4
(2 rows)

explain (costs off) select * from :tname where c1 >= '3';
                            QUERY PLAN                            
------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: (c1 >= '3'::name)
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c1 >= '3';
 c0 | c1 
----+----
 1  | 3
 2  | 3
 2  | 4
(3 rows)

explain (costs off) select * from :tname where c0 >= '2' and c1 >= '3';
                            QUERY PLAN                             
-------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)
   ->  Custom Scan (MarsSortScan) on test_mars_varlen_type_as_tag
         Filter: (((c0)::text >= '2'::text) AND (c1 >= '3'::name))
 Optimizer: Postgres query optimizer
(4 rows)

select * from :tname where c0 >= '2' and c1 >= '3';
 c0 | c1 
----+----
 2  | 3
 2  | 4
(2 rows)

