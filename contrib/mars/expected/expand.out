-- start_ignore
CREATE EXTENSION IF NOT EXISTS matrixts;
CREATE EXTENSION IF NOT EXISTS mars;
create extension gp_debug_numsegments;
select gp_debug_set_create_table_default_numsegments(1);
 gp_debug_set_create_table_default_numsegments 
-----------------------------------------------
 1
(1 row)

-- end_ignore
\set tname test_expand_mars_group_col_
\set withopts 'with (group_col_=''{c1}'')'
\i sql/mars_expand.template
-- start_ignore
drop table if exists :tname;
psql:sql/mars_expand.template:2: NOTICE:  table "test_expand_mars_group_col_" does not exist, skipping
-- end_ignore
create table :tname
     ( c1 int
     , c2 int
     )
 using mars
 :withopts
 distributed by (c1)
;
-- the first batch
insert into :tname
select i / 2 * 100 + 300 as c1
     , i % 4 * 100 + 300 as c2
  from generate_series(0, 11) i
;
select gp_segment_id, ctid, * from :tname;
 gp_segment_id | ctid  | c1  | c2  
---------------+-------+-----+-----
             0 | (1,1) | 300 | 400
             0 | (2,1) | 400 | 600
             0 | (3,1) | 500 | 400
             0 | (4,1) | 600 | 600
             0 | (5,1) | 700 | 400
             0 | (6,1) | 800 | 600
(6 rows)

select count(*) as nrows from :tname;
 nrows 
-------
     6
(1 row)

\gset
-- expand table
alter table :tname expand table;
-- To verify data integrity
select * from :tname;
 c1  | c2  
-----+-----
 600 | 600
 300 | 400
 400 | 600
 500 | 400
 700 | 400
 800 | 600
(6 rows)

-- seg0 should have only partial of the data now
select count(*) < :nrows from :tname where gp_segment_id = 0;
 ?column? 
----------
 t
(1 row)

\set tname test_expand_mars_group_param_col_
\set withopts 'with (group_param_col_=''{c1 in 500}'')'
\i sql/mars_expand.template
-- start_ignore
drop table if exists :tname;
psql:sql/mars_expand.template:2: NOTICE:  table "test_expand_mars_group_param_col_" does not exist, skipping
-- end_ignore
create table :tname
     ( c1 int
     , c2 int
     )
 using mars
 :withopts
 distributed by (c1)
;
-- the first batch
insert into :tname
select i / 2 * 100 + 300 as c1
     , i % 4 * 100 + 300 as c2
  from generate_series(0, 11) i
;
select gp_segment_id, ctid, * from :tname;
 gp_segment_id | ctid  | c1  | c2  
---------------+-------+-----+-----
             0 | (1,1) | 300 | 400
             0 | (1,2) | 400 | 600
             0 | (2,1) | 500 | 400
             0 | (2,2) | 600 | 600
             0 | (2,3) | 700 | 400
             0 | (2,4) | 800 | 600
(6 rows)

select count(*) as nrows from :tname;
 nrows 
-------
     6
(1 row)

\gset
-- expand table
alter table :tname expand table;
-- To verify data integrity
select * from :tname;
 c1  | c2  
-----+-----
 600 | 600
 500 | 400
 700 | 400
 800 | 600
 300 | 400
 400 | 600
(6 rows)

-- seg0 should have only partial of the data now
select count(*) < :nrows from :tname where gp_segment_id = 0;
 ?column? 
----------
 t
(1 row)

\set tname test_expand_mars_group_col_local_order_col_
\set withopts 'with (group_col_=''{c1}'', local_order_col_=''{c2}'')'
\i sql/mars_expand.template
-- start_ignore
drop table if exists :tname;
psql:sql/mars_expand.template:2: NOTICE:  table "test_expand_mars_group_col_local_order_col_" does not exist, skipping
-- end_ignore
create table :tname
     ( c1 int
     , c2 int
     )
 using mars
 :withopts
 distributed by (c1)
;
-- the first batch
insert into :tname
select i / 2 * 100 + 300 as c1
     , i % 4 * 100 + 300 as c2
  from generate_series(0, 11) i
;
select gp_segment_id, ctid, * from :tname;
 gp_segment_id | ctid  | c1  | c2  
---------------+-------+-----+-----
             0 | (1,1) | 300 | 400
             0 | (2,1) | 400 | 600
             0 | (3,1) | 500 | 400
             0 | (4,1) | 600 | 600
             0 | (5,1) | 700 | 400
             0 | (6,1) | 800 | 600
(6 rows)

select count(*) as nrows from :tname;
 nrows 
-------
     6
(1 row)

\gset
-- expand table
alter table :tname expand table;
-- To verify data integrity
select * from :tname;
 c1  | c2  
-----+-----
 600 | 600
 300 | 400
 400 | 600
 500 | 400
 700 | 400
 800 | 600
(6 rows)

-- seg0 should have only partial of the data now
select count(*) < :nrows from :tname where gp_segment_id = 0;
 ?column? 
----------
 t
(1 row)

\set tname test_expand_mars_local_order_col_
\set withopts 'with (local_order_col_=''{c1}'')'
\i sql/mars_expand.template
-- start_ignore
drop table if exists :tname;
psql:sql/mars_expand.template:2: NOTICE:  table "test_expand_mars_local_order_col_" does not exist, skipping
-- end_ignore
create table :tname
     ( c1 int
     , c2 int
     )
 using mars
 :withopts
 distributed by (c1)
;
-- the first batch
insert into :tname
select i / 2 * 100 + 300 as c1
     , i % 4 * 100 + 300 as c2
  from generate_series(0, 11) i
;
select gp_segment_id, ctid, * from :tname;
 gp_segment_id |  ctid  | c1  | c2  
---------------+--------+-----+-----
             0 | (1,1)  | 300 | 300
             0 | (1,2)  | 300 | 400
             0 | (1,3)  | 400 | 500
             0 | (1,4)  | 400 | 600
             0 | (1,5)  | 500 | 300
             0 | (1,6)  | 500 | 400
             0 | (1,7)  | 600 | 500
             0 | (1,8)  | 600 | 600
             0 | (1,9)  | 700 | 300
             0 | (1,10) | 700 | 400
             0 | (1,11) | 800 | 500
             0 | (1,12) | 800 | 600
(12 rows)

select count(*) as nrows from :tname;
 nrows 
-------
    12
(1 row)

\gset
-- expand table
alter table :tname expand table;
-- To verify data integrity
select * from :tname;
 c1  | c2  
-----+-----
 600 | 500
 600 | 600
 300 | 300
 300 | 400
 400 | 500
 400 | 600
 500 | 300
 500 | 400
 700 | 300
 700 | 400
 800 | 500
 800 | 600
(12 rows)

-- seg0 should have only partial of the data now
select count(*) < :nrows from :tname where gp_segment_id = 0;
 ?column? 
----------
 t
(1 row)

\set tname test_expand_mars_group_col_group_param_col_
\set withopts 'with (group_col_=''{c1}'', group_param_col_=''{c2 in 500}'')'
\i sql/mars_expand.template
-- start_ignore
drop table if exists :tname;
psql:sql/mars_expand.template:2: NOTICE:  table "test_expand_mars_group_col_group_param_col_" does not exist, skipping
-- end_ignore
create table :tname
     ( c1 int
     , c2 int
     )
 using mars
 :withopts
 distributed by (c1)
;
-- the first batch
insert into :tname
select i / 2 * 100 + 300 as c1
     , i % 4 * 100 + 300 as c2
  from generate_series(0, 11) i
;
select gp_segment_id, ctid, * from :tname;
 gp_segment_id | ctid  | c1  | c2  
---------------+-------+-----+-----
             0 | (1,1) | 300 | 300
             0 | (1,2) | 300 | 400
             0 | (2,1) | 400 | 500
             0 | (2,2) | 400 | 600
             0 | (3,1) | 500 | 300
             0 | (3,2) | 500 | 400
             0 | (4,1) | 600 | 500
             0 | (4,2) | 600 | 600
             0 | (5,1) | 700 | 300
             0 | (5,2) | 700 | 400
             0 | (6,1) | 800 | 500
             0 | (6,2) | 800 | 600
(12 rows)

select count(*) as nrows from :tname;
 nrows 
-------
    12
(1 row)

\gset
-- expand table
alter table :tname expand table;
-- To verify data integrity
select * from :tname;
 c1  | c2  
-----+-----
 600 | 500
 600 | 600
 300 | 300
 300 | 400
 400 | 500
 400 | 600
 500 | 300
 500 | 400
 700 | 300
 700 | 400
 800 | 500
 800 | 600
(12 rows)

-- seg0 should have only partial of the data now
select count(*) < :nrows from :tname where gp_segment_id = 0;
 ?column? 
----------
 t
(1 row)

